name: Release to crates.io and GitHub

on:
  push:
    tags:
      - "v*"

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev
      - run: cargo fmt --check
      - run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Run Comprehensive Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
      - name: ðŸ“¦ Install dependencies
        run: cargo fetch
      - name: ðŸ§ª Run unit tests
        run: cargo test --lib --verbose
      - name: ðŸ”§ Run integration tests
        run: cargo test --test integration_tests --verbose
      - name: ðŸš€ Run all tests
        run: cargo test --all --verbose
      - name: ðŸ“¦ Build release
        run: cargo build --release
      - name: Upload release binary
        uses: actions/upload-artifact@v4
        with:
          name: git-editor
          path: target/release/git-editor

  publish-cratesio:
    name: Publish to crates.io
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  github-release:
    name: Upload Binaries to GitHub Release
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: git-editor
          path: artifacts/
      - run: ls -la artifacts/
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/git-editor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
